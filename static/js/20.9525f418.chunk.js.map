{"version":3,"sources":["views/Nft/market/hooks/useAllPancakeBunnyNfts.ts","views/Nft/market/Collection/Items/PancakeBunniesCollectionNfts.tsx","components/ScrollToTopButton/index.tsx","views/Nft/market/components/Filters/ListTraitFilter/styles.tsx","views/Nft/market/components/Filters/ListTraitFilter/index.tsx","views/Nft/market/Collection/Items/ClearAllButton.tsx","views/Nft/market/Collection/Items/SortSelect.tsx","views/Nft/market/Collection/Items/Filters.tsx","views/Nft/market/Collection/config.ts","views/Nft/market/Collection/Items/CollectionNfts.tsx","views/Nft/market/Collection/Items/FilteredCollectionNfts.tsx","views/Nft/market/Collection/Items/CollectionWrapper.tsx","views/Nft/market/Collection/Items/index.tsx","views/Nft/market/components/GridPlaceholder.tsx","components/Select/Select.tsx","views/Nft/market/components/Filters/ListFilter/styles.tsx","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_createSet.js"],"names":["useAllPancakeBunnyNfts","collectionAddress","useState","allPancakeBunnyNfts","setAllPancakeBunnyNfts","isPBCollection","pancakeBunniesAddress","useEffect","a","getNftsFromCollectionApi","data","bunnyIds","Object","keys","getAllPancakeBunniesLowestPrice","lowestPrices","getAllPancakeBunniesRecentUpdatedAt","latestUpdates","allBunnies","map","bunnyId","tokenId","name","description","collectionName","collection","image","attributes","traitType","value","displayType","meta","currentAskPrice","updatedAt","fetchPancakeBunnies","PancakeBunniesCollectionNfts","sortBy","address","sortedNfts","orderBy","nft","Number","length","gridGap","gridTemplateColumns","alignItems","GridPlaceholder","FixedContainer","styled","div","ScrollToTopButton","visible","setVisible","t","useTranslation","toggleVisible","scrolled","document","documentElement","scrollTop","window","addEventListener","removeEventListener","style","display","variant","endIcon","color","onClick","scrollTo","top","behavior","TraitItemRow","item","isSelected","onSelect","px","py","src","height","width","mr","flex","label","undefined","count","formatNumber","scale","checked","onChange","noop","ml","TriggerButton","Button","hasItem","CloseButton","IconButton","ListTraitFilter","title","items","isOpen","setIsOpen","query","setQuery","orderKey","orderDir","orderState","setOrderState","wrapperRef","useRef","menuRef","nftFilters","useGetNftFilters","nftFilterState","useGetNftFilterLoadingState","dispatch","useAppDispatch","traitFilter","isTraitSelected","filteredItems","filter","toLowerCase","indexOf","toggleSort","newOrderKey","prevOrderDir","handleClickOutside","target","current","contains","mb","ref","component","disabled","FetchStatus","Fetching","options","placement","maxWidth","p","startIcon","placeholder","evt","fontSize","fontWeight","textTransform","overflowY","filteredItem","isItemSelected","attr","filterNftsFromCollection","handleItemSelect","justifyContent","textAlign","newFilters","ClearAllButton","props","removeAllFilters","SortSelect","selectedOrder","useGetNftOrdering","sortByItems","field","direction","defaultOptionIndex","findIndex","option","Select","onOptionChange","newOption","setOrdering","GridContainer","Grid","theme","mediaQueries","sm","md","lg","xxl","FilterByTitle","Text","FilterByControls","Box","SortByTitle","SortByControls","ScrollableFlexContainer","Flex","Filters","useGetCollectionDistribution","showOnlyNftsOnSale","useGetNftShowOnlyOnSale","activeButtonIndex","setActiveButtonIndex","attrsByType","reduce","accum","uniqueTraitTypes","bold","activeIndex","onItemClick","newIndex","setShowOnlyOnSale","showOnlyOnSale","capitalize","isEmpty","REQUEST_SIZE","CollectionNfts","totalSupply","numberTokensListed","page","setPage","skip","setSkip","nfts","setNfts","isFetchingFilteredNfts","setIsFetchingFilteredNfts","collectionNfts","useNftsFromCollection","nftFilterLoadingState","orderField","orderDirection","isFetching","fetchApiData","marketData","apiRequestPromises","marketNft","getNftApi","Promise","all","apiResponses","responsesWithMarketData","apiNft","i","prevState","combinedNfts","uniqBy","fetchMarketData","getNftsMarketData","isTradable","subgraphRes","fetchNftsFromCollections","size","nftsToShow","isNotLastPage","resultsAmount","currentAskPriceAsNumber","parseFloat","mt","prevPage","spin","FilteredCollectionNfts","numToShow","setNumToShow","orderedNfts","Infinity","tokenIdNumber","isFinite","parseInt","filteredNfts","slice","prevNumToShow","flexDirection","CollectionWrapper","Container","createPortal","body","Items","useParams","setSortBy","useGetCollection","fetchCollection","Header","minWidth","GridPlaceholderItem","numItems","times","itemKey","DropDownHeader","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","dropdownRef","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","index","selectedIndex","StyledItemRow","ItemImage","Image","SearchWrapper","FilterButton","module","exports","array","predicate","fromIndex","fromRight","baseIteratee","require","baseUniq","iteratee","baseIndexOf","comparator","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","includes","isCommon","result","seen","set","outer","computed","seenIndex","push","baseFindIndex","baseIsNaN","strictIndexOf","Set","values"],"mappings":"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","file":"static/js/20.9525f418.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport {\n  getAllPancakeBunniesLowestPrice,\n  getAllPancakeBunniesRecentUpdatedAt,\n  getNftsFromCollectionApi,\n} from 'state/nftMarket/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\n// If collection is PancakeBunnies - gets all available bunnies, otherwise - null\nconst useAllPancakeBunnyNfts = (collectionAddress: string) => {\n  const [allPancakeBunnyNfts, setAllPancakeBunnyNfts] = useState<NftToken[]>(null)\n\n  const isPBCollection = collectionAddress === pancakeBunniesAddress\n\n  useEffect(() => {\n    const fetchPancakeBunnies = async () => {\n      // In order to not define special TS type just for PancakeBunnies display we're hacking a little bit into NftToken type.\n      // On this page we just want to display all bunnies with their lowest prices and updates on the market\n      // Since some bunnies might not be on the market at all, we don't refer to the redux nfts state (which stores NftToken with actual token ids)\n      // We merely request from API all available bunny ids with their metadata and query subgraph for lowest price and latest updates.\n      const { data } = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      const bunnyIds = Object.keys(data)\n      const lowestPrices = await getAllPancakeBunniesLowestPrice(bunnyIds)\n      const latestUpdates = await getAllPancakeBunniesRecentUpdatedAt(bunnyIds)\n      const allBunnies: NftToken[] = bunnyIds.map((bunnyId) => {\n        return {\n          // tokenId here is just a dummy one to satisfy TS. TokenID does not play any role in gird display below\n          tokenId: data[bunnyId].name,\n          name: data[bunnyId].name,\n          description: data[bunnyId].description,\n          collectionAddress: pancakeBunniesAddress,\n          collectionName: data[bunnyId].collection.name,\n          image: data[bunnyId].image,\n          attributes: [\n            {\n              traitType: 'bunnyId',\n              value: bunnyId,\n              displayType: null,\n            },\n          ],\n          meta: {\n            currentAskPrice: lowestPrices[bunnyId],\n            updatedAt: latestUpdates[bunnyId],\n          },\n        }\n      })\n      setAllPancakeBunnyNfts(allBunnies)\n    }\n    if (isPBCollection && !allPancakeBunnyNfts) {\n      fetchPancakeBunnies()\n    }\n  }, [isPBCollection, allPancakeBunnyNfts])\n\n  return allPancakeBunnyNfts\n}\n\nexport default useAllPancakeBunnyNfts\n","import React from 'react'\nimport { Grid } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { Collection } from 'state/nftMarket/types'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport useAllPancakeBunnyNfts from '../../hooks/useAllPancakeBunnyNfts'\nimport GridPlaceholder from '../../components/GridPlaceholder'\n\ninterface CollectionNftsProps {\n  collection: Collection\n  sortBy?: string\n}\n\nconst PancakeBunniesCollectionNfts: React.FC<CollectionNftsProps> = ({ collection, sortBy = 'updatedAt' }) => {\n  const { address } = collection\n  const allPancakeBunnyNfts = useAllPancakeBunnyNfts(address)\n\n  const sortedNfts = allPancakeBunnyNfts\n    ? orderBy(allPancakeBunnyNfts, (nft) => (nft.meta[sortBy] ? Number(nft?.meta[sortBy]) : 0), [\n        sortBy === 'currentAskPrice' ? 'asc' : 'desc',\n      ])\n    : []\n\n  if (!sortedNfts.length) {\n    return <GridPlaceholder />\n  }\n\n  return (\n    <>\n      <Grid\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {sortedNfts.map((nft) => {\n          return <CollectibleLinkCard key={`${nft.tokenId}-${nft.collectionName}`} nft={nft} />\n        })}\n      </Grid>\n    </>\n  )\n}\n\nexport default PancakeBunniesCollectionNfts\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst FixedContainer = styled.div`\n  position: fixed;\n  right: 5%;\n  bottom: 110px;\n`\n\nconst ScrollToTopButton = () => {\n  const [visible, setVisible] = useState(false)\n  const { t } = useTranslation()\n\n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop\n    if (scrolled > 700) {\n      setVisible(true)\n    } else if (scrolled <= 700) {\n      setVisible(false)\n    }\n  }\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 400,\n      behavior: 'auto',\n    })\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisible)\n\n    return () => window.removeEventListener('scroll', toggleVisible)\n  }, [])\n\n  return (\n    <FixedContainer style={{ display: visible ? 'inline' : 'none' }}>\n      <Button variant=\"subtle\" endIcon={<ChevronUpIcon color=\"invertedContrast\" />} onClick={scrollToTop}>\n        {t('To Top')}\n      </Button>\n    </FixedContainer>\n  )\n}\n\nexport default ScrollToTopButton\n","import React from 'react'\nimport { Radio, Text } from '@pancakeswap/uikit'\nimport noop from 'lodash/noop'\nimport { formatNumber } from 'utils/formatBalance'\nimport { ItemImage, StyledItemRow } from '../ListFilter/styles'\nimport { Item } from './types'\n\ninterface TraitItemRowProps {\n  item: Item\n  isSelected: boolean\n  onSelect: () => void\n}\n\nexport const TraitItemRow: React.FC<TraitItemRowProps> = ({ item, isSelected, onSelect }) => (\n  <StyledItemRow alignItems=\"center\" px=\"16px\" py=\"8px\" onClick={onSelect}>\n    {item.image && <ItemImage src={item.image} height={48} width={48} mr=\"16px\" />}\n    <Text style={{ flex: 1 }}>{item.label}</Text>\n    {item.count !== undefined && (\n      <Text color=\"textSubtle\" px=\"8px\">\n        {formatNumber(item.count, 0, 0)}\n      </Text>\n    )}\n    <Radio name=\"item-select\" scale=\"sm\" checked={isSelected} value={item.label} onChange={noop} ml=\"24px\" />\n  </StyledItemRow>\n)\n","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  Box,\n  Button,\n  Text,\n  Flex,\n  IconButton,\n  InlineMenu,\n  Input,\n  InputGroup,\n  SearchIcon,\n  CloseIcon,\n} from '@pancakeswap/uikit'\nimport { FetchStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport orderBy from 'lodash/orderBy'\nimport { useAppDispatch } from 'state'\nimport { useGetNftFilterLoadingState, useGetNftFilters } from 'state/nftMarket/hooks'\nimport { filterNftsFromCollection } from 'state/nftMarket/reducer'\nimport styled from 'styled-components'\nimport { Item } from './types'\nimport { FilterButton, ListOrderState, SearchWrapper } from '../ListFilter/styles'\nimport { TraitItemRow } from './styles'\n\ninterface ListTraitFilterProps {\n  title?: string\n  traitType: string\n  items: Item[]\n  collectionAddress: string\n}\n\nconst TriggerButton = styled(Button)<{ hasItem: boolean }>`\n  ${({ hasItem }) =>\n    hasItem &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    padding-right: 8px;\n  `}\n`\n\nconst CloseButton = styled(IconButton)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`\n\nexport const ListTraitFilter: React.FC<ListTraitFilterProps> = ({ title, traitType, items, collectionAddress }) => {\n  const { t } = useTranslation()\n  const [isOpen, setIsOpen] = useState(false)\n  const [query, setQuery] = useState('')\n  const [orderState, setOrderState] = useState<ListOrderState>({ orderKey: 'count', orderDir: 'asc' })\n  const wrapperRef = useRef(null)\n  const menuRef = useRef(null)\n  const nftFilters = useGetNftFilters(collectionAddress)\n  const nftFilterState = useGetNftFilterLoadingState(collectionAddress)\n  const dispatch = useAppDispatch()\n  const { orderKey, orderDir } = orderState\n\n  const traitFilter = nftFilters[traitType]\n  const isTraitSelected = !!traitFilter\n\n  const filteredItems =\n    query && query.length > 1\n      ? items.filter((item) => item.label.toLowerCase().indexOf(query.toLowerCase()) !== -1)\n      : items\n\n  const handleClearItem = () => {\n    const newFilters = { ...nftFilters }\n\n    delete newFilters[traitType]\n\n    dispatch(\n      filterNftsFromCollection({\n        collectionAddress,\n        nftFilters: newFilters,\n      }),\n    )\n  }\n\n  const handleMenuClick = () => setIsOpen(!isOpen)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.target\n    setQuery(value)\n  }\n\n  const handleItemSelect = ({ attr }: Item) => {\n    dispatch(\n      filterNftsFromCollection({\n        collectionAddress,\n        nftFilters: { ...nftFilters, [traitType]: attr },\n      }),\n    )\n  }\n\n  const toggleSort = (newOrderKey: string) => () => {\n    setOrderState((prevOrderDir) => {\n      if (prevOrderDir.orderKey !== newOrderKey) {\n        return {\n          orderKey: newOrderKey,\n          orderDir: 'asc',\n        }\n      }\n\n      return {\n        orderKey: newOrderKey,\n        orderDir: prevOrderDir.orderDir === 'asc' ? 'desc' : 'asc',\n      }\n    })\n  }\n\n  // @TODO Fix this in the Toolkit\n  // This is a fix to ensure the \"isOpen\" value is aligned with the menus's (to avoid a double click)\n  useEffect(() => {\n    const handleClickOutside = ({ target }: Event) => {\n      if (\n        wrapperRef.current &&\n        menuRef.current &&\n        !menuRef.current.contains(target) &&\n        !wrapperRef.current.contains(target)\n      ) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('click', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [setIsOpen, wrapperRef, menuRef])\n\n  return (\n    <Flex alignItems=\"center\" mr=\"4px\" mb=\"4px\">\n      <Box ref={wrapperRef}>\n        <InlineMenu\n          component={\n            <TriggerButton\n              onClick={handleMenuClick}\n              variant={isTraitSelected ? 'subtle' : 'light'}\n              scale=\"sm\"\n              disabled={nftFilterState === FetchStatus.Fetching}\n              hasItem={isTraitSelected}\n            >\n              {title}\n            </TriggerButton>\n          }\n          isOpen={isOpen}\n          options={{ placement: 'bottom' }}\n        >\n          <Box maxWidth=\"375px\" ref={menuRef}>\n            <SearchWrapper alignItems=\"center\" p=\"16px\">\n              <InputGroup startIcon={<SearchIcon color=\"textSubtle\" />}>\n                <Input name=\"query\" placeholder={t('Search')} onChange={handleChange} value={query} />\n              </InputGroup>\n            </SearchWrapper>\n            <Flex alignItems=\"center\" p=\"16px\">\n              <FilterButton onClick={toggleSort('label')} style={{ flex: 1 }}>\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\n                  {t('Name')}\n                </Text>\n                <Box width=\"18px\">\n                  {orderKey === 'label' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\n                  {orderKey === 'label' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\n                </Box>\n              </FilterButton>\n              <FilterButton onClick={toggleSort('count')}>\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\n                  {t('Count')}\n                </Text>\n                <Box width=\"18px\">\n                  {orderKey === 'count' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\n                  {orderKey === 'count' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\n                </Box>\n              </FilterButton>\n            </Flex>\n            <Box height=\"240px\" overflowY=\"auto\">\n              {filteredItems.length > 0 ? (\n                orderBy(filteredItems, orderKey, orderDir).map((filteredItem) => {\n                  const handleSelect = () => handleItemSelect(filteredItem)\n                  const isItemSelected = traitFilter ? traitFilter.value === filteredItem.attr.value : false\n\n                  return (\n                    <TraitItemRow\n                      key={filteredItem.label}\n                      item={filteredItem}\n                      isSelected={isItemSelected}\n                      onSelect={handleSelect}\n                    />\n                  )\n                })\n              ) : (\n                <Flex alignItems=\"center\" justifyContent=\"center\" height=\"230px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {t('No results found')}\n                  </Text>\n                </Flex>\n              )}\n            </Box>\n          </Box>\n        </InlineMenu>\n      </Box>\n      {isTraitSelected && (\n        <CloseButton\n          variant={isTraitSelected ? 'subtle' : 'light'}\n          scale=\"sm\"\n          onClick={handleClearItem}\n          disabled={nftFilterState === FetchStatus.Fetching}\n        >\n          <CloseIcon color=\"currentColor\" width=\"18px\" />\n        </CloseButton>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { removeAllFilters } from 'state/nftMarket/reducer'\nimport { useGetNftFilterLoadingState } from 'state/nftMarket/hooks'\nimport { FetchStatus } from 'config/constants/types'\n\ninterface ClearAllButtonProps extends ButtonProps {\n  collectionAddress: string\n}\n\nconst ClearAllButton: React.FC<ClearAllButtonProps> = ({ collectionAddress, ...props }) => {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const nftFilterState = useGetNftFilterLoadingState(collectionAddress)\n\n  const clearAll = () => {\n    dispatch(removeAllFilters(collectionAddress))\n  }\n\n  return (\n    <Button\n      key=\"clear-all\"\n      variant=\"text\"\n      scale=\"sm\"\n      onClick={clearAll}\n      disabled={nftFilterState === FetchStatus.Fetching}\n      {...props}\n    >\n      {t('Clear')}\n    </Button>\n  )\n}\n\nexport default ClearAllButton\n","import React from 'react'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { setOrdering } from 'state/nftMarket/reducer'\nimport { useGetNftOrdering } from 'state/nftMarket/hooks'\n\nconst SortSelect: React.FC<{ collectionAddress: string }> = ({ collectionAddress }) => {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const selectedOrder = useGetNftOrdering(collectionAddress)\n  const handleChange = (newOption: OptionProps) => {\n    const { field, direction } = newOption.value\n    dispatch(setOrdering({ collection: collectionAddress, field, direction }))\n  }\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: { field: 'updatedAt', direction: 'desc' } },\n    { label: t('Lowest price'), value: { field: 'currentAskPrice', direction: 'asc' } },\n    { label: t('Highest price'), value: { field: 'currentAskPrice', direction: 'desc' } },\n    { label: t('Token ID'), value: { field: 'tokenId', direction: 'asc' } },\n  ]\n\n  const defaultOptionIndex = sortByItems.findIndex(\n    (option) => option.value.field === selectedOrder.field && option.value.direction === selectedOrder.direction,\n  )\n\n  return (\n    <Select\n      options={sortByItems}\n      onOptionChange={handleChange}\n      defaultOptionIndex={defaultOptionIndex !== -1 ? defaultOptionIndex : undefined}\n    />\n  )\n}\n\nexport default SortSelect\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, ButtonMenu, ButtonMenuItem, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport capitalize from 'lodash/capitalize'\nimport isEmpty from 'lodash/isEmpty'\nimport { useGetNftFilters, useGetNftShowOnlyOnSale } from 'state/nftMarket/hooks'\nimport { Collection, NftAttribute } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { Item, ListTraitFilter } from 'views/Nft/market/components/Filters'\nimport { useAppDispatch } from 'state'\nimport { setShowOnlyOnSale } from 'state/nftMarket/reducer'\nimport useGetCollectionDistribution from '../../hooks/useGetCollectionDistribution'\nimport ClearAllButton from './ClearAllButton'\nimport SortSelect from './SortSelect'\n\ninterface FiltersProps {\n  collection: Collection\n}\n\nconst GridContainer = styled(Grid)`\n  margin-bottom: 16px;\n  padding: 0 16px;\n  grid-gap: 8px 16px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas:\n    'filterByTitle .'\n    'attributeFilters attributeFilters'\n    '. sortByTitle'\n    'filterByControls sortByControls';\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas:\n      'filterByTitle . .'\n      'attributeFilters attributeFilters attributeFilters'\n      '. . sortByTitle'\n      'filterByControls . sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 2fr 5fr 1fr;\n    grid-template-areas:\n      'filterByTitle . .'\n      'filterByControls attributeFilters attributeFilters'\n      '. . sortByTitle'\n      '. . sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1.3fr 5fr 1fr;\n    grid-template-areas:\n      'filterByTitle . sortByTitle'\n      'filterByControls attributeFilters sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    grid-template-columns: 1fr 5fr 1fr;\n  }\n`\n\nconst FilterByTitle = styled(Text)`\n  grid-area: filterByTitle;\n`\n\nconst FilterByControls = styled(Box)`\n  grid-area: filterByControls;\n`\n\nconst SortByTitle = styled(Text)`\n  grid-area: sortByTitle;\n`\n\nconst SortByControls = styled(Box)`\n  grid-area: sortByControls;\n`\n\nconst ScrollableFlexContainer = styled(Flex)`\n  grid-area: attributeFilters;\n  align-items: center;\n  flex: 1;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-wrap: wrap;\n    overflow-x: revert;\n  }\n`\n\nconst Filters: React.FC<FiltersProps> = ({ collection }) => {\n  const { address } = collection\n  const dispatch = useAppDispatch()\n  const { data } = useGetCollectionDistribution(address)\n  const { t } = useTranslation()\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(address)\n  const [activeButtonIndex, setActiveButtonIndex] = useState(showOnlyNftsOnSale ? 1 : 0)\n\n  const onActiveButtonChange = (newIndex: number) => {\n    dispatch(setShowOnlyOnSale({ collection: address, showOnlyOnSale: newIndex === 1 }))\n    setActiveButtonIndex(newIndex)\n  }\n\n  const nftFilters = useGetNftFilters(address)\n  const attrsByType: Record<string, NftAttribute[]> = collection?.attributes?.reduce(\n    (accum, attr) => ({\n      ...accum,\n      [attr.traitType]: accum[attr.traitType] ? [...accum[attr.traitType], attr] : [attr],\n    }),\n    {},\n  )\n  const uniqueTraitTypes = attrsByType ? Object.keys(attrsByType) : []\n\n  return (\n    <GridContainer>\n      <FilterByTitle textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" bold>\n        {t('Filter by')}\n      </FilterByTitle>\n      <FilterByControls>\n        <ButtonMenu scale=\"sm\" activeIndex={activeButtonIndex} onItemClick={onActiveButtonChange}>\n          <ButtonMenuItem>{t('All')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('On Sale')}</ButtonMenuItem>\n        </ButtonMenu>\n      </FilterByControls>\n      <SortByTitle fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n        {t('Sort By')}\n      </SortByTitle>\n      <SortByControls>\n        <SortSelect collectionAddress={address} />\n      </SortByControls>\n      <ScrollableFlexContainer>\n        {uniqueTraitTypes.map((traitType) => {\n          const attrs = attrsByType[traitType]\n          const items: Item[] = attrs.map((attr) => ({\n            label: capitalize(attr.value as string),\n            count: data && data[traitType] ? data[traitType][attr.value] : undefined,\n            attr,\n          }))\n\n          return (\n            <ListTraitFilter\n              key={traitType}\n              title={capitalize(traitType)}\n              traitType={traitType}\n              items={items}\n              collectionAddress={address}\n            />\n          )\n        })}\n        {!isEmpty(nftFilters) && <ClearAllButton collectionAddress={address} mb=\"4px\" />}\n      </ScrollableFlexContainer>\n    </GridContainer>\n  )\n}\n\nexport default Filters\n","export const REQUEST_SIZE = 100\n","import React, { useEffect, useState } from 'react'\nimport uniqBy from 'lodash/uniqBy'\nimport { AutoRenewIcon, Button, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport {\n  useGetNftFilterLoadingState,\n  useGetNftOrdering,\n  useGetNftShowOnlyOnSale,\n  useNftsFromCollection,\n} from 'state/nftMarket/hooks'\nimport { Collection, NftToken, TokenMarketData } from 'state/nftMarket/types'\nimport { fetchNftsFromCollections } from 'state/nftMarket/reducer'\nimport { getNftApi, getNftsMarketData } from 'state/nftMarket/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { FetchStatus } from 'config/constants/types'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport { REQUEST_SIZE } from '../config'\n\ninterface CollectionNftsProps {\n  collection: Collection\n}\n\nconst CollectionNfts: React.FC<CollectionNftsProps> = ({ collection }) => {\n  const { totalSupply, numberTokensListed, address: collectionAddress } = collection\n  const [page, setPage] = useState(1)\n  const [skip, setSkip] = useState(0)\n  const [nfts, setNfts] = useState<NftToken[]>([])\n  const [isFetchingFilteredNfts, setIsFetchingFilteredNfts] = useState(false)\n  const { t } = useTranslation()\n  const collectionNfts = useNftsFromCollection(collectionAddress)\n  const nftFilterLoadingState = useGetNftFilterLoadingState(collectionAddress)\n  const dispatch = useAppDispatch()\n\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(collectionAddress)\n  const { field: orderField, direction: orderDirection } = useGetNftOrdering(collectionAddress)\n  const isFetching = orderField === 'tokenId' ? nftFilterLoadingState === FetchStatus.Fetching : isFetchingFilteredNfts\n\n  const handleLoadMore = () => {\n    if (orderField === 'tokenId') {\n      setPage((prevPage) => prevPage + 1)\n    }\n    setSkip(skip + REQUEST_SIZE)\n  }\n\n  useEffect(() => {\n    if (orderField === 'tokenId') {\n      setPage(1)\n    }\n  }, [orderField])\n\n  useEffect(() => {\n    setNfts([])\n    setSkip(0)\n  }, [orderField, orderDirection])\n\n  useEffect(() => {\n    const fetchApiData = async (marketData: TokenMarketData[]) => {\n      const apiRequestPromises = marketData.map((marketNft) => getNftApi(collectionAddress, marketNft.tokenId))\n      const apiResponses = await Promise.all(apiRequestPromises)\n      const responsesWithMarketData = apiResponses.map((apiNft, i) => {\n        return {\n          ...apiNft,\n          collectionAddress,\n          collectionName: apiNft.collection.name,\n          marketData: marketData[i],\n        }\n      })\n      setIsFetchingFilteredNfts(false)\n      setNfts((prevState) => {\n        const combinedNfts = [...prevState, ...responsesWithMarketData]\n        return uniqBy(combinedNfts, 'tokenId')\n      })\n    }\n\n    const fetchMarketData = async () => {\n      const subgraphRes = await getNftsMarketData(\n        { collection: collectionAddress.toLowerCase(), isTradable: true },\n        REQUEST_SIZE,\n        orderField,\n        orderDirection,\n        skip,\n      )\n      fetchApiData(subgraphRes)\n    }\n\n    if (orderField !== 'tokenId') {\n      // Query by tokenId is handled in useEffect below since we in this case\n      // we need to show all NFTs, even those that never been on sale (i.e. they are not in subgraph)\n      setIsFetchingFilteredNfts(true)\n      fetchMarketData()\n    }\n  }, [orderField, orderDirection, skip, collectionAddress])\n\n  useEffect(() => {\n    if (orderField === 'tokenId') {\n      dispatch(\n        fetchNftsFromCollections({\n          collectionAddress,\n          page,\n          size: REQUEST_SIZE,\n        }),\n      )\n    }\n  }, [page, collectionAddress, dispatch, orderField])\n\n  const nftsToShow =\n    orderField === 'tokenId'\n      ? collectionNfts?.filter((nft) => {\n          if (showOnlyNftsOnSale) {\n            return nft.marketData?.isTradable\n          }\n          return true\n        })\n      : nfts\n\n  if (!nftsToShow || nftsToShow?.length === 0) {\n    return <GridPlaceholder />\n  }\n\n  const isNotLastPage =\n    showOnlyNftsOnSale || orderField !== 'tokenId'\n      ? nftsToShow?.length < Number(numberTokensListed)\n      : nftsToShow?.length < Number(totalSupply)\n\n  const resultsAmount = showOnlyNftsOnSale || orderField !== 'tokenId' ? numberTokensListed : totalSupply\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <Text bold>\n          {resultsAmount} {t('Results')}\n        </Text>\n      </Flex>\n      <Grid\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {nftsToShow.map((nft) => {\n          const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\n\n          return (\n            <CollectibleLinkCard\n              key={nft.tokenId}\n              nft={nft}\n              currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\n            />\n          )\n        })}\n      </Grid>\n      <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\n        {isNotLastPage && (\n          <Button\n            onClick={handleLoadMore}\n            scale=\"sm\"\n            endIcon={isFetching ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {isFetching ? t('Loading') : t('Load more')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default CollectionNfts\n","import React, { useState } from 'react'\nimport orderBy from 'lodash/orderBy'\nimport { BunnyPlaceholderIcon, Button, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport {\n  useGetNftFilterLoadingState,\n  useGetNftOrdering,\n  useGetNftShowOnlyOnSale,\n  useNftsFromCollection,\n} from 'state/nftMarket/hooks'\nimport { Collection } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { FetchStatus } from 'config/constants/types'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport { REQUEST_SIZE } from '../config'\n\ninterface FilteredCollectionNftsProps {\n  collection: Collection\n}\n\nconst FilteredCollectionNfts: React.FC<FilteredCollectionNftsProps> = ({ collection }) => {\n  const { address: collectionAddress } = collection\n  const [numToShow, setNumToShow] = useState(REQUEST_SIZE)\n  const { t } = useTranslation()\n  const selectedOrder = useGetNftOrdering(collectionAddress)\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(collectionAddress)\n  const collectionNfts = useNftsFromCollection(collectionAddress)\n  const nftFilterLoadingState = useGetNftFilterLoadingState(collectionAddress)\n\n  const handleLoadMore = () => {\n    setNumToShow((prevNumToShow) => prevNumToShow + REQUEST_SIZE)\n  }\n\n  if (nftFilterLoadingState === FetchStatus.Fetching) {\n    return <GridPlaceholder />\n  }\n\n  const orderedNfts = collectionNfts\n    ? orderBy(\n        collectionNfts,\n        (nft) => {\n          if (selectedOrder.field === 'currentAskPrice') {\n            const currentAskPriceAsNumber = nft.marketData?.currentAskPrice\n              ? parseFloat(nft.marketData?.currentAskPrice)\n              : 0\n            if (currentAskPriceAsNumber > 0) {\n              return parseFloat(nft.marketData.currentAskPrice)\n            }\n            return selectedOrder.direction === 'asc' ? Infinity : -Infinity\n          }\n          if (selectedOrder.field === 'tokenId') {\n            const tokenIdNumber = Number(nft.tokenId)\n            return Number.isFinite(tokenIdNumber) ? tokenIdNumber : 0\n          }\n          // recently listed sorting\n          return nft.marketData ? parseInt(nft.marketData[selectedOrder.field], 10) : 0\n        },\n        selectedOrder.direction,\n      )\n    : []\n\n  const filteredNfts = showOnlyNftsOnSale ? orderedNfts.filter((nft) => nft.marketData?.isTradable) : orderedNfts\n\n  const nftsToShow = filteredNfts.slice(0, numToShow)\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <Text bold>\n          {filteredNfts.length} {t('Results')}\n        </Text>\n      </Flex>\n      {nftsToShow.length > 0 ? (\n        <>\n          <Grid\n            gridGap=\"16px\"\n            gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n            alignItems=\"start\"\n          >\n            {nftsToShow.map((nft) => {\n              const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\n\n              return (\n                <CollectibleLinkCard\n                  key={nft.tokenId}\n                  nft={nft}\n                  currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\n                />\n              )\n            })}\n          </Grid>\n          <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\n            {collectionNfts.length > numToShow && (\n              <Button onClick={handleLoadMore} scale=\"sm\">\n                {t('Load more')}\n              </Button>\n            )}\n          </Flex>\n        </>\n      ) : (\n        <Flex alignItems=\"center\" py=\"48px\" flexDirection=\"column\">\n          <BunnyPlaceholderIcon width=\"96px\" mb=\"24px\" />\n          <Text fontWeight={600}>{t('No NFTs found')}</Text>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default FilteredCollectionNfts\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport { Box } from '@pancakeswap/uikit'\nimport isEmpty from 'lodash/isEmpty'\nimport { Collection } from 'state/nftMarket/types'\nimport { useGetNftFilters } from 'state/nftMarket/hooks'\nimport Container from 'components/Layout/Container'\nimport ScrollButton from 'components/ScrollToTopButton'\nimport Filters from './Filters'\nimport CollectionNfts from './CollectionNfts'\nimport FilteredCollectionNfts from './FilteredCollectionNfts'\n\ninterface CollectionWrapperProps {\n  collection: Collection\n}\n\nconst CollectionWrapper: React.FC<CollectionWrapperProps> = ({ collection }) => {\n  const nftFilters = useGetNftFilters(collection.address)\n\n  return (\n    <Box py=\"32px\">\n      <Container px={[0, null, '24px']}>\n        <Filters collection={collection} />\n      </Container>\n      <Container>\n        {isEmpty(nftFilters) ? (\n          <CollectionNfts collection={collection} />\n        ) : (\n          <FilteredCollectionNfts collection={collection} />\n        )}\n      </Container>\n      {createPortal(<ScrollButton />, document.body)}\n    </Box>\n  )\n}\n\nexport default CollectionWrapper\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { Box, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Container from 'components/Layout/Container'\nimport { pancakeBunniesAddress } from '../../constants'\nimport PancakeBunniesCollectionNfts from './PancakeBunniesCollectionNfts'\nimport Header from '../Header'\nimport CollectionWrapper from './CollectionWrapper'\n\nconst Items = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const [sortBy, setSortBy] = useState('updatedAt')\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  const { address } = collection || {}\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: 'updatedAt' },\n    { label: t('Lowest price'), value: 'currentAskPrice' },\n  ]\n\n  const handleChange = (newOption: OptionProps) => {\n    setSortBy(newOption.value)\n  }\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address))\n    }\n  }, [address, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      {isPBCollection ? (\n        <Container mb=\"24px\">\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\n            <Box minWidth=\"165px\">\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n                {t('Sort By')}\n              </Text>\n              <Select options={sortByItems} onOptionChange={handleChange} />\n            </Box>\n          </Flex>\n          <PancakeBunniesCollectionNfts collection={collection} sortBy={sortBy} />\n        </Container>\n      ) : (\n        <CollectionWrapper collection={collection} />\n      )}\n    </>\n  )\n}\n\nexport default Items\n","import React from 'react'\nimport { Box, BoxProps, Grid, GridProps, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\n\ninterface GridPlaceholderProps extends GridProps {\n  numItems?: number\n}\n\nexport const GridPlaceholderItem: React.FC<BoxProps> = (props) => (\n  <Box {...props}>\n    <Skeleton height=\"258px\" mb=\"8px\" />\n    <Skeleton width=\"30%\" mb=\"4px\" />\n    <Skeleton width=\"45%\" mb=\"16px\" />\n    <Skeleton />\n  </Box>\n)\n\nconst GridPlaceholder: React.FC<GridPlaceholderProps> = ({ numItems = 12, ...props }) => (\n  <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, 'repeat(4, 1fr)']} {...props}>\n    {times(numItems).map((itemKey) => (\n      <GridPlaceholderItem key={itemKey} />\n    ))}\n  </Grid>\n)\n\nexport default GridPlaceholder\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { Flex, Image, Button, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const StyledItemRow = styled(Flex)`\n  cursor: pointer;\n  user-select: none;\n`\n\nexport const ItemImage = styled(Image)`\n  border-radius: 50%;\n`\n\nexport const SearchWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 24px 24px 0 0;\n`\n\nexport const FilterButton = styled(Flex)`\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n\n  svg {\n    pointer-events: none;\n  }\n`\n\nexport interface ListOrderState {\n  orderKey: string\n  orderDir: 'asc' | 'desc'\n}\n\nexport const TriggerButton = styled(Button)<{ hasItem: boolean }>`\n  ${({ hasItem }) =>\n    hasItem &&\n    `  \n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    padding-right: 8px;\n  `}\n`\n\nexport const CloseButton = styled(IconButton)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n"],"sourceRoot":""}